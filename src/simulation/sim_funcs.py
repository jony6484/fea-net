import numpy as np
# from src.simulation.eval_funcs1 import *
from functools import lru_cache, wraps




def Nid(Elecon, i):

    Nid1_x = 2 * (Elecon[i, 0])
    Nid1_y = 2 * (Elecon[i, 0]) +1
    Nid2_x = 2 * (Elecon[i, 1])
    Nid2_y = 2 * (Elecon[i, 1]) +1
    Nid3_x = 2 * (Elecon[i, 2])
    Nid3_y = 2 * (Elecon[i, 2]) +1

    return Nid1_x, Nid1_y, Nid2_x, Nid2_y, Nid3_x, Nid3_y


def bulge_G_elem(C10,C20,C30,le,h,n,p,ue,Re):
    G_elem = np.zeros((6,n))
    s = np.sqrt(3)
    a = (-s / 3 - 1)
    b = (-s / 3 + 1)
    c = (-s / 3 - 1 / 2)
    d = (-s / 3 + 1 / 2)
    f = (s / 3 + 1)
    g = (s / 3 - 1)
    q = (s / 3 - 1 / 2)
    t = (s / 3 + 1 / 2)
    for i in range(n):
        r1 = ue[0,i]
        z1 = ue[1,i]
        r2 = ue[2,i]
        z2 = ue[3,i]
        r3 = ue[4,i]
        z3 = ue[5,i]
        R1 = Re[0,i]
        R2 = Re[2,i]
        R3 = Re[4,i]
        G_elem[:,i] = [np.pi * le * (-2 / 3 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / le * (c * z1 + 2 / 3 * s * z2 + d * z3) * s * a + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2)) * h) / 2 + np.pi * le * (2 / 3 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / le * (q * z1 - 2 / 3 * s * z2 + t * z3) * s * g + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s * g / 0.12e2)) * h) / 2, np.pi * le * (2 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / le * c + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2)) * h) / 2 + np.pi * le * (2 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / le * q + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2)) * h) / 2, np.pi * le * (8 / 3 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / le * (c * z1 + 2 / 3 * s * z2 + d * z3) + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3)) * h) / 2 + np.pi * le * (8 / 3 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / le * (q * z1 - 2 / 3 * s * z2 + t * z3) + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 3)) * h) / 2, np.pi * le * (4 / 3 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / le * s + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3)) * h) / 2 + np.pi * le * (-4 / 3 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / le * s + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3)) * h) / 2, np.pi * le * (-2 / 3 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / le * (c * z1 + 2 / 3 * s * z2 + d * z3) * s * b + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2)) * h) / 2 + np.pi * le * (2 / 3 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / le * (q * z1 - 2 / 3 * s * z2 + t * z3) * s *f + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 * s *f / 0.12e2)) * h) / 2, np.pi * le * (2 * p * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / le * d + 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * (C10 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2)) * h) / 2 + np.pi * le * (2 * p * (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / le * t + 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) * (C10 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s *f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s *f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2)) * h) / 2]
    return G_elem

# @lru_cache()
def bulge_Assem_G(G_elem, Elecon, n, Total_Nodes, DOF_BC):

    G_global = np.zeros((Total_Nodes * 2, 1))

    for i in range(n):
        Nid1_x, Nid1_y, Nid2_x, Nid2_y, Nid3_x, Nid3_y = Nid(Elecon, i)

        G_global[Nid1_x, 0] = G_global[Nid1_x, 0] + G_elem[0, i]
        G_global[Nid1_y, 0] = G_global[Nid1_y, 0] + G_elem[1, i]
        G_global[Nid2_x, 0] = G_global[Nid2_x, 0] + G_elem[2, i]
        G_global[Nid2_y, 0] = G_global[Nid2_y, 0] + G_elem[3, i]
        G_global[Nid3_x, 0] = G_global[Nid3_x, 0] + G_elem[4, i]
        G_global[Nid3_y, 0] = G_global[Nid3_y, 0] + G_elem[5, i]

    for j in range(Total_Nodes * 2):
        if DOF_BC[j, 0] == 1:
            G_global[j, 0] = 0;
    return G_global

# @lru_cache()
def bulge_Assem_KT(KT_elem, Elecon, n, Total_Nodes, DOF_BC):

    KT_global = np.zeros((Total_Nodes * 2, Total_Nodes * 2))


    for i in range(n):
        Nid1_x, Nid1_y, Nid2_x, Nid2_y, Nid3_x, Nid3_y = Nid(Elecon, i)

        KT_global[Nid1_x, Nid1_x] = KT_global[Nid1_x, Nid1_x] + KT_elem[0, 0, i]
        KT_global[Nid1_x, Nid1_y] = KT_global[Nid1_x, Nid1_y] + KT_elem[0, 1, i]
        KT_global[Nid1_x, Nid2_x] = KT_global[Nid1_x, Nid2_x] + KT_elem[0, 2, i]
        KT_global[Nid1_x, Nid2_y] = KT_global[Nid1_x, Nid2_y] + KT_elem[0, 3, i]
        KT_global[Nid1_x, Nid3_x] = KT_global[Nid1_x, Nid3_x] + KT_elem[0, 4, i]
        KT_global[Nid1_x, Nid3_y] = KT_global[Nid1_x, Nid3_y] + KT_elem[0, 5, i]

        KT_global[Nid1_y, Nid1_x] = KT_global[Nid1_y, Nid1_x] + KT_elem[1, 0, i]
        KT_global[Nid1_y, Nid1_y] = KT_global[Nid1_y, Nid1_y] + KT_elem[1, 1, i]
        KT_global[Nid1_y, Nid2_x] = KT_global[Nid1_y, Nid2_x] + KT_elem[1, 2, i]
        KT_global[Nid1_y, Nid2_y] = KT_global[Nid1_y, Nid2_y] + KT_elem[1, 3, i]
        KT_global[Nid1_y, Nid3_x] = KT_global[Nid1_y, Nid3_x] + KT_elem[1, 4, i]
        KT_global[Nid1_y, Nid3_y] = KT_global[Nid1_y, Nid3_y] + KT_elem[1, 5, i]

        KT_global[Nid2_x, Nid1_x] = KT_global[Nid2_x, Nid1_x] + KT_elem[2, 0, i]
        KT_global[Nid2_x, Nid1_y] = KT_global[Nid2_x, Nid1_y] + KT_elem[2, 1, i]
        KT_global[Nid2_x, Nid2_x] = KT_global[Nid2_x, Nid2_x] + KT_elem[2, 2, i]
        KT_global[Nid2_x, Nid2_y] = KT_global[Nid2_x, Nid2_y] + KT_elem[2, 3, i]
        KT_global[Nid2_x, Nid3_x] = KT_global[Nid2_x, Nid3_x] + KT_elem[2, 4, i]
        KT_global[Nid2_x, Nid3_y] = KT_global[Nid2_x, Nid3_y] + KT_elem[2, 5, i]

        KT_global[Nid2_y, Nid1_x] = KT_global[Nid2_y, Nid1_x] + KT_elem[3, 0, i]
        KT_global[Nid2_y, Nid1_y] = KT_global[Nid2_y, Nid1_y] + KT_elem[3, 1, i]
        KT_global[Nid2_y, Nid2_x] = KT_global[Nid2_y, Nid2_x] + KT_elem[3, 2, i]
        KT_global[Nid2_y, Nid2_y] = KT_global[Nid2_y, Nid2_y] + KT_elem[3, 3, i]
        KT_global[Nid2_y, Nid3_x] = KT_global[Nid2_y, Nid3_x] + KT_elem[3, 4, i]
        KT_global[Nid2_y, Nid3_y] = KT_global[Nid2_y, Nid3_y] + KT_elem[3, 5, i]

        KT_global[Nid3_x, Nid1_x] = KT_global[Nid3_x, Nid1_x] + KT_elem[4, 0, i]
        KT_global[Nid3_x, Nid1_y] = KT_global[Nid3_x, Nid1_y] + KT_elem[4, 1, i]
        KT_global[Nid3_x, Nid2_x] = KT_global[Nid3_x, Nid2_x] + KT_elem[4, 2, i]
        KT_global[Nid3_x, Nid2_y] = KT_global[Nid3_x, Nid2_y] + KT_elem[4, 3, i]
        KT_global[Nid3_x, Nid3_x] = KT_global[Nid3_x, Nid3_x] + KT_elem[4, 4, i]
        KT_global[Nid3_x, Nid3_y] = KT_global[Nid3_x, Nid3_y] + KT_elem[4, 5, i]

        KT_global[Nid3_y, Nid1_x] = KT_global[Nid3_y, Nid1_x] + KT_elem[5, 0, i]
        KT_global[Nid3_y, Nid1_y] = KT_global[Nid3_y, Nid1_y] + KT_elem[5, 1, i]
        KT_global[Nid3_y, Nid2_x] = KT_global[Nid3_y, Nid2_x] + KT_elem[5, 2, i]
        KT_global[Nid3_y, Nid2_y] = KT_global[Nid3_y, Nid2_y] + KT_elem[5, 3, i]
        KT_global[Nid3_y, Nid3_x] = KT_global[Nid3_y, Nid3_x] + KT_elem[5, 4, i]
        KT_global[Nid3_y, Nid3_y] = KT_global[Nid3_y, Nid3_y] + KT_elem[5, 5, i]

    for k in range(Total_Nodes*2):
         if DOF_BC[k, 0] == 1:
             for i in range(Total_Nodes*2):
                 KT_global[i,k] = 0
                 KT_global[k,i] = 0
             KT_global[k,k] = 1
    return KT_global

# @lru_cache()
def bulge_du_to_due(n, Elecon, du_global):
    due = np.zeros((6, n))

    for i in range(n):
        Nid1_x, Nid1_y, Nid2_x, Nid2_y, Nid3_x, Nid3_y = Nid(Elecon, i)

        due[0, i] = du_global[Nid1_x]
        due[1, i] = du_global[Nid1_y]
        due[2, i] = du_global[Nid2_x]
        due[3, i] = du_global[Nid2_y]
        due[4, i] = du_global[Nid3_x]
        due[5, i] = du_global[Nid3_y]
    return due


# @lru_cache()
def bulge_ue_to_u(n, Total_Nodes, Elecon, ue):
    u_global = np.zeros((Total_Nodes*2, 1))

    for i in range(n):
        Nid1_x, Nid1_y, Nid2_x, Nid2_y, Nid3_x, Nid3_y = Nid(Elecon, i)

        u_global[Nid1_x, 0] = ue[0, i]
        u_global[Nid1_y, 0] = ue[1, i]
        u_global[Nid2_x, 0] = ue[2, i]
        u_global[Nid2_y, 0] = ue[3, i]
        u_global[Nid3_x, 0] = ue[4, i]
        u_global[Nid3_y, 0] = ue[5, i]

    return u_global

# @lru_cache()
def bulge_Stiff_elem_No_p(C10,C20,C30,le,h,n,p,ue,Re):
    KT_elem = np.zeros((6, 6, n))
    KT = np.zeros((6, 6))
    s = np.sqrt(3)
    a = (-s / 3 - 1)
    b = (-s / 3 + 1)
    c = (-s / 3 - 1 / 2)
    d = (-s / 3 + 1 / 2)
    f = (s / 3 + 1)
    g = (s / 3 - 1)
    q = (s / 3 - 1 / 2)
    t = (s / 3 + 1 / 2)
    for i in range(n):
        r1 = ue[0, i]
        z1 = ue[1, i]
        r2 = ue[2, i]
        z2 = ue[3, i]
        r3 = ue[4, i]
        z3 = ue[5, i]
        R1 = Re[0, i]
        R2 = Re[2, i]
        R3 = Re[4, i]
        KT = np.array([[np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * c ** 2 + a ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a ** 2 / 8) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * c ** 2 + a ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a ** 2 / 8) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * c ** 2 + a ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a ** 2 / 8)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * q ** 2 + g ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g ** 2 / 8) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * q ** 2 + g ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g ** 2 / 8) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * q ** 2 + g ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g ** 2 / 8)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6))], [ np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * c ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * c ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * c ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * c ** 2 / 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * q ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * q ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * q ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * q ** 2 / 2)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2))], [ np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * s * c - 2 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * s * q + 2 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.32e2 / 3 / le ** 2 + 8 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 8 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.32e2 / 3 / le ** 2 + 8 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 8 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.32e2 / 3 / le ** 2 + 8 / 9 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 8 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (0.32e2 / 3 / le ** 2 + 8 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 - 8 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (0.32e2 / 3 / le ** 2 + 8 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 - 8 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.32e2 / 3 / le ** 2 + 8 / 9 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 - 8 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t))], [ np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * s - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * s * c + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * s * c / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * s * q - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * s * q / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * (c * z1 + 2 / 3 * s * z2 + d * z3) + 4 / 9 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * (q * z1 - 2 / 3 * s * z2 + t * z3) - 4 / 9 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2) + 2 * C20 * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2) + 2 * C20 * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.32e2 / 3 / le ** 2 + 8 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 - 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3))], [ np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d * c + b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * s * b / 6 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 6 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * a * b / 8)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t * q + f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * q * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * s * f / 6 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 6 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * g * f / 8)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c * s * b / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q * s * f / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * d * s - 2 / 9 * s * b / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3 + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * t * s + 2 / 9 * s * f / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * s * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * f / 3 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3 + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * b / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * f / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d ** 2 + b ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * b ** 2 / 8) + 2 * C20 * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d ** 2 + b ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * b ** 2 / 8) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d ** 2 + b ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 4 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * b ** 2 / 8)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t ** 2 + f ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * t ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * f ** 2 / 8) + 2 * C20 * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t ** 2 + f ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * t ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * f ** 2 / 8) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t ** 2 + f ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 6 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 * t ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 4 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * f ** 2 / 8)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6))], [ np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * c * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * a / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * q * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * g / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * c / 2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d * c + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * c * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * c / 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * q / 2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t * q + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * q * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * q / 2)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s + 4 / 3 * (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * s * (c * z1 + 2 / 3 * s * z2 + d * z3) * d + 2 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s + 4 / 3 * (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * s * (q * z1 - 2 / 3 * s * z2 + t * z3) * t + 2 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (0.16e2 / 3 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * s / 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (0.16e2 / 3 / le ** 2 * d * s + 4 / 3 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * s * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d * s / 3)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (-0.16e2 / 3 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * s / 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (-0.16e2 / 3 / le ** 2 * t * s - 4 / 3 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * s * t + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t * s / 3)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d - (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 3 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d / 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / 0.12e2) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * r1 + 2 / 3 * s * r2 + d * r3) * d ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 3 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 * s * b / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 6)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 3 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t / 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / 0.12e2) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * r1 - 2 / 3 * s * r2 + t * r3) * t ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 3 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 * s * f / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 6)), np.pi * le * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) * h * (C10 * (8 / le ** 2 * d ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2) + 2 * C20 * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) ** 2 + 2 * C20 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * d ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2) + 6 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) * d / 2) ** 2 + 3 * C30 * (4 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 4 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 + (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 / (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * d ** 2 + 2 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 3 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 4 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2 * d ** 2 - 1 / (1 / le ** 2 * (c * r1 + 2 / 3 * s * r2 + d * r3) ** 2 + 1 / le ** 2 * (c * z1 + 2 / 3 * s * z2 + d * z3) ** 2) ** 2 / (-s * a * r1 / 6 + 2 / 3 * r2 - s * b * r3 / 6) ** 2 * (-s * a * R1 / 6 + 2 / 3 * R2 - s * b * R3 / 6) ** 2 / le ** 2 * d ** 2 / 2)) + np.pi * le * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) * h * (C10 * (8 / le ** 2 * t ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * t ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2) + 2 * C20 * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) ** 2 + 2 * C20 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * t ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * t ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2) + 6 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) * (8 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) * t / 2) ** 2 + 3 * C30 * (4 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 4 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 + (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 / (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 + 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / 4 - 3) ** 2 * (8 / le ** 2 * t ** 2 + 2 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 3 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 4 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2 * t ** 2 - 1 / (1 / le ** 2 * (q * r1 - 2 / 3 * s * r2 + t * r3) ** 2 + 1 / le ** 2 * (q * z1 - 2 / 3 * s * z2 + t * z3) ** 2) ** 2 / (s * g * r1 / 6 + 2 / 3 * r2 + s * f * r3 / 6) ** 2 * (s * g * R1 / 6 + 2 / 3 * R2 + s * f * R3 / 6) ** 2 / le ** 2 * t ** 2 / 2))]])

        KT_elem[:,:, i] = KT
    return KT_elem